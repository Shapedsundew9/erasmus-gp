"""Deterministic Random Number Generator.

See https://g.co/gemini/share/5737bff25344 for why numpy PCG64.
"""

from numpy.random import Generator, PCG64


class EGPRndGen(Generator):
    """EGPRndGen is a subclass of numpy's Generator class.

    It uses the PCG64 algorithm for generating random numbers.
    """

    def __init__(self, seed: int = 0) -> None:
        """Initialize the EGPRndGen with a seed."""
        super().__init__(PCG64(seed))
        self.seed = seed


# Reproducibility
rng = EGPRndGen(seed=42)
uniform = rng.uniform(0.0, 1.0, 100)
UNIFORM: tuple[float, ...] = (
    0.77395604855596333848666290577967,
    0.43887843975205231838998543025809,
    0.85859791991138245670356354821706,
    0.69736802905936390306607108868775,
    0.09417734788764953179907024605200,
    0.97562235163675592453103035950335,
    0.76113970199035296815281981253065,
    0.78606430527695381194064339069882,
    0.12811363267554587430652190960245,
    0.45038593789556713442578939066152,
    0.37079802423258123589278056897456,
    0.92676498884860181171063686633715,
    0.64386512008066454360033503689920,
    0.82276161327082997232196248660330,
    0.44341419882733112967088118239189,
    0.22723872178477688699160808027955,
    0.55458478701583480141579229893978,
    0.06381725610417532390528094765614,
    0.82763117199258207090650785175967,
    0.63166439912206484574852538571577,
    0.75808774008537382904648893600097,
    0.35452596812986836294356862708810,
    0.97069802439490326939619535551174,
    0.89312112132219767524077269627014,
    0.77838349707376186525920047643012,
    0.19463870785196757395851818728261,
    0.46672100372703417825448468647664,
    0.04380376578722877667360080522485,
    0.15428949206754782874639886358636,
    0.68304895324245462617795965343248,
    0.74476215590781713604684455276583,
    0.96750973243421001246389323569019,
    0.32582535813815194369880146041396,
    0.37045970603486888528266263165278,
    0.46955581127580792166753553829039,
    0.18947135908428569539552199785248,
    0.12992150533547164314995825407095,
    0.47570492622593374409944999570143,
    0.22690934905088411266405046262662,
    0.66981399468251034967636314831907,
    0.43715191887233073586571663327049,
    0.83267819605783743863725021583377,
    0.70026510200224911795174875805969,
    0.31236664138204106588858621762483,
    0.83225980139520105982597897309461,
    0.80476435749680186315657692830428,
    0.38747837903017445793096840134240,
    0.28832810393024410622331288323039,
    0.68249550397497549258929439019994,
    0.13975248360930980773275678075152,
    0.19990820247510832086135224017198,
    0.00736226975100551239705737316399,
    0.78692437750213839464663578837644,
    0.66485085659203213559464984427905,
    0.70516537862633510425069971461198,
    0.78072903102196788971411933744093,
    0.45891577553833995395393685612362,
    0.56874119595289374107238700162270,
    0.13979699812765744582065963186324,
    0.11453007353597344231133092762320,
    0.66840296179047165026076982030645,
    0.47109620614313252318083868885878,
    0.56523610648118882693324849242344,
    0.76499885741602557942542262026109,
    0.63471832000059080769460706505924,
    0.55357940065799582374239662385662,
    0.55920716074541354512206225990667,
    0.30395009806261219509337934141513,
    0.03081783456793940612072901785723,
    0.43671738923236236296077095175860,
    0.21458467281952919858412087705801,
    0.40852864372463615350028476314037,
    0.85340307326816611244169052952202,
    0.23393948586534074607357069908176,
    0.05830274168906601772732756217010,
    0.28138389202199654004488138525630,
    0.29359375776668361623933378723450,
    0.66191651472689505553148592298385,
    0.55703215234127834154520542142563,
    0.78389820910641350160119600332109,
    0.66431354032738754167297656749724,
    0.40638686144007052369886423548451,
    0.81402038466603465760584867894067,
    0.16697291990770390945897361234529,
    0.02271207313386047754732999237604,
    0.09004786077564175261755963219912,
    0.72235935059645028921693210577359,
    0.46187723025138738286443640390644,
    0.16127177903360179200831225898582,
    0.50104477510336353773823248047847,
    0.15231210271316841797784036316443,
    0.69632037507773603124405781272799,
    0.44615627557403070291286439896794,
    0.38102122609648247930635989177972,
    0.30151208914787652748401569624548,
    0.63028259311888845672910974826664,
    0.36181261055339042354006551249768,
    0.08764991931610099928917634315439,
    0.11800590212051531580073060467839,
    0.96189766454951453056310128886253,
)

# Test to ensure the generated uniform random numbers match the expected values
assert all(
    a == b for a, b in zip(uniform, UNIFORM)
), "Random generator reproducibility test failed."
